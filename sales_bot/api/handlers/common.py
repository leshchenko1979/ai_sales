"""Common utilities and constants for command handlers."""

import logging
from functools import wraps
from typing import Callable, TypeVar

from core.telegram.client import app
from infrastructure.config import (
    ACCESS_DENIED_MSG,
    ADMIN_TELEGRAM_ID,
    TESTER_TELEGRAM_IDS,
)
from pyrogram import Client, filters
from pyrogram.types import Message

logger = logging.getLogger(__name__)

# Constants
STATUS_EMOJIS = {
    "active": "‚úÖ",
    "disabled": "üî¥",
    "blocked": "‚õî",
    "unknown": "‚ùì",
    "new": "üÜï",
    "code_requested": "üì±",
    "password_requested": "üîë",
    "warming": "üî•",
}

T = TypeVar("T")


def admin(func: Callable[..., T]) -> Callable[..., T]:
    """Admin-only command decorator."""

    @wraps(func)
    async def wrapper(client: Client, message: Message, *args, **kwargs) -> T:
        if message.from_user.id != ADMIN_TELEGRAM_ID:
            await message.reply(ACCESS_DENIED_MSG)
            return
        return await func(client, message, *args, **kwargs)

    return wrapper


def tester(func: Callable[..., T]) -> Callable[..., T]:
    """Tester command decorator. Allows both admin and testers to use the command."""

    @wraps(func)
    async def wrapper(client: Client, message: Message, *args, **kwargs) -> T:
        user_id = message.from_user.id
        if user_id != ADMIN_TELEGRAM_ID and user_id not in TESTER_TELEGRAM_IDS:
            await message.reply(ACCESS_DENIED_MSG)
            return
        return await func(client, message, *args, **kwargs)

    return wrapper


@app.on_message(filters.command("help"))
@admin
async def cmd_help(client: Client, message: Message):
    """Show help message with available commands."""
    help_text = """
*–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏:
/accounts - –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/add_account - –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
/edit_account - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
/delete_account - –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
/export_accounts - –≠–∫—Å–ø–æ—Ä—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ CSV

–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:
/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
/logs - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏
/errors - –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏

–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
/test_dialog - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º
"""
    await message.reply(help_text)
