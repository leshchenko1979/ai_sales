"""Main application entry point."""

import logging

from api import handlers  # noqa: F401
from core.telegram import app
from core.telegram.session import save_session
from infrastructure.logging import setup_logging
from pyrogram import idle, types

# Configure logging
setup_logging()
logger = logging.getLogger(__name__)


async def main():
    """Main application entry point."""

    async with app:  # Automatic session management
        try:
            logger.info("Bot started successfully")

            # Set bot commands for testing mode
            commands = [
                types.BotCommand("test_dialog", "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∏–∞–ª–æ–≥"),
                types.BotCommand("help", "–°–ø—Ä–∞–≤–∫–∞"),
            ]

            await app.set_bot_commands(commands)
            logger.info("Bot commands set successfully")

            # Log welcome message
            welcome_message = """
            ü§ñ –ë–æ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ö–æ–ª–æ–¥–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –¥–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç–∞ –∑–∞–ø—É—â–µ–Ω!

            –ö–∞–∫ –Ω–∞—á–∞—Ç—å:
            1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /test_dialog —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥
            2. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
            3. –í—Å–µ –¥–∏–∞–ª–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞

            –£–¥–∞—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è! üöÄ
            """
            logger.info(welcome_message)

            # Wait for stop signal
            await idle()

        except Exception as e:
            logger.error(f"Critical error in main: {e}", exc_info=True)
            raise

        # Save session string
        session_string = await app.export_session_string()
        if save_session(session_string):
            logger.info("Saved session string")
        else:
            logger.warning("Failed to save session string")

    logger.info("Bot stopped successfully")


if __name__ == "__main__":
    # Run main
    try:
        app.run(main())
    except KeyboardInterrupt:
        logger.info("Bot shutdown requested by user")
    except Exception as e:
        logger.critical(f"Unexpected error: {e}", exc_info=True)
